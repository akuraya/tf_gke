name: terraform apply
on:
  pull_request:
    types: [closed]
    branches:
      - 'main'
    paths:
      - '**.tf'

env:
  TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }}

jobs:
  tf-merge:
    runs-on: ubuntu-20.04
    if: github.event.pull_request.merged == true
    defaults:
      run:
        shell: bash
        working-directory: .
    steps:
      - name: Clone Repository
        uses: actions/checkout@v2

      - name: Setup Google Cloud
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Setup Tfnotify
        run: |
          sudo curl -fL -o tfnotify.tar.gz https://github.com/mercari/tfnotify/releases/download/v0.7.0/tfnotify_linux_amd64.tar.gz
          sudo tar -C /usr/bin -xzf ./tfnotify.tar.gz

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.2
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        continue-on-error: true

      - name: Terraform Apply And Notify By Slack
        id: plan
        run: |
          terraform apply -no-color -auto-approve | tfnotify --config .tfnotify/slack.yml apply --message "$(date)"
        env:
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID }}
          SLACK_BOT_NAME: tf-notify-bot
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}